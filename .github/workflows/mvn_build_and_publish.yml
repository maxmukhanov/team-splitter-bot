# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build And Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
permissions:
  contents: write

jobs:
  build:
    
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        server-id: github
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
    - name: Release version
      run: |
        release_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | cut -d- -f1)
        mvn versions:set -DnewVersion=${release_version}
        echo "Version is ${release_version}"
        
        mvn versions:revert
        
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"

        mvn -B -DskipTests -DscmCommentPrefix="[platform] " \
        -DscmDevelopmentCommitComment="@{prefix} prepare next development iteration [skip ci]" \
        -DscmReleaseCommitComment="@{prefix} prepare release @{releaseLabel} [skip ci]" \
        release:clean release:prepare
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
#     - name: Publish to GitHub Packages Apache Maven
#       run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#       env:
#         GITHUB_TOKEN: ${{ github.token }}
